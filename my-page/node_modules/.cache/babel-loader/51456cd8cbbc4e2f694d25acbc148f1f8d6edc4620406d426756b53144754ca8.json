{"ast":null,"code":"var _jsxFileName = \"C:\\\\c-zero\\\\my-page\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport Posts from \"./components/Posts\";\nimport { fetchData } from \"./Api/data\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Diary from \"./components/Diary\";\nimport axios from \"axios\";\n\n// master\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [size, setSize] = useState(10);\n  const [data, setData] = useState({});\n  useEffect(() => {\n    const response = fetchData(currentPage, size);\n    response.then(response => setData(response));\n  }, [currentPage]);\n\n  // 페이지 네이션을 위한 필요 데이터\n  /* \r\n  1. 페이지당 출력 개수(10) postPerPage\r\n  2. indexOfLastPage\r\n  3. indexOfFirstPage\r\n  4. currentPage\r\n  */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/postList\",\n        element: /*#__PURE__*/_jsxDEV(Posts, {\n          posts: data.dtoList,\n          prev: data.prev,\n          next: data.next,\n          start: data.start,\n          end: data.end,\n          pageList: data.pageList,\n          setCurrentPage: setCurrentPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/diary/:diaryNumber\",\n        element: /*#__PURE__*/_jsxDEV(Diary, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LLCTWtRJz2FcbGjGAr/FBIO5U0M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Posts","fetchData","Routes","Route","Diary","axios","App","currentPage","setCurrentPage","size","setSize","data","setData","response","then","dtoList","prev","next","start","end","pageList"],"sources":["C:/c-zero/my-page/src/App.js"],"sourcesContent":["import \"./App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Posts from \"./components/Posts\";\r\nimport { fetchData } from \"./Api/data\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport Diary from \"./components/Diary\";\r\nimport axios from \"axios\";\r\n\r\n// master\r\nfunction App() {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [size, setSize] = useState(10);\r\n  const [data, setData] = useState({});\r\n  useEffect(() => {\r\n    const response = fetchData(currentPage, size);\r\n    response.then((response) => setData(response));\r\n  }, [currentPage]);\r\n\r\n  // 페이지 네이션을 위한 필요 데이터\r\n  /* \r\n  1. 페이지당 출력 개수(10) postPerPage\r\n  2. indexOfLastPage\r\n  3. indexOfFirstPage\r\n  4. currentPage\r\n  */\r\n  return (\r\n    <div className=\"App\">\r\n      <Routes>\r\n        <Route\r\n          path=\"/postList\"\r\n          element={\r\n            <Posts\r\n              posts={data.dtoList}\r\n              prev={data.prev}\r\n              next={data.next}\r\n              start={data.start}\r\n              end={data.end}\r\n              pageList={data.pageList}\r\n              setCurrentPage={setCurrentPage}\r\n            />\r\n          }\r\n        />\r\n        <Route path=\"/diary/:diaryNumber\" element={<Diary />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAChD,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA;AACA,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpCC,SAAS,CAAC,MAAM;IACd,MAAMc,QAAQ,GAAGZ,SAAS,CAACM,WAAW,EAAEE,IAAI,CAAC;IAC7CI,QAAQ,CAACC,IAAI,CAAED,QAAQ,IAAKD,OAAO,CAACC,QAAQ,CAAC,CAAC;EAChD,CAAC,EAAE,CAACN,WAAW,CAAC,CAAC;;EAEjB;EACA;AACF;AACA;AACA;AACA;AACA;EACE,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB,QAAC,MAAM;MAAA,wBACL,QAAC,KAAK;QACJ,IAAI,EAAC,WAAW;QAChB,OAAO,eACL,QAAC,KAAK;UACJ,KAAK,EAAEI,IAAI,CAACI,OAAQ;UACpB,IAAI,EAAEJ,IAAI,CAACK,IAAK;UAChB,IAAI,EAAEL,IAAI,CAACM,IAAK;UAChB,KAAK,EAAEN,IAAI,CAACO,KAAM;UAClB,GAAG,EAAEP,IAAI,CAACQ,GAAI;UACd,QAAQ,EAAER,IAAI,CAACS,QAAS;UACxB,cAAc,EAAEZ;QAAe;UAAA;UAAA;UAAA;QAAA;MAElC;QAAA;QAAA;QAAA;MAAA,QACD,eACF,QAAC,KAAK;QAAC,IAAI,EAAC,qBAAqB;QAAC,OAAO,eAAE,QAAC,KAAK;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACjD;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,GArCQF,GAAG;AAAA,KAAHA,GAAG;AAuCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}