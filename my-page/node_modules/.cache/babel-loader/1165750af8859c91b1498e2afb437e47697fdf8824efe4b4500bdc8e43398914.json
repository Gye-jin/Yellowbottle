{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\04.front\\\\04.react\\\\my-page\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Posts from \"./components/Posts\";\nimport Pagination from \"./components/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(\"http://localhost:8080/api/page\", {\n        params: {\n          page: currentPage,\n          size: postsPerPage\n        }\n      });\n      // console.log(response.data);\n      setPosts(response.data);\n    };\n    fetchData();\n  }, []);\n  console.log(posts);\n  // 페이지 네이션을 위한 필요 데이터\n  /* \n  1. 페이지당 출력 개수(10) postPerPage\n  2. indexOfLastPage\n  3. indexOfFirstPage\n  4. currentPage\n  */\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(10);\n  const indexOfLastPage = currentPage * postsPerPage;\n  const indexOfFirstPage = indexOfLastPage - postsPerPage;\n  const currentPosts = posts => {\n    let currentPosts = [];\n    currentPosts = posts.slice(indexOfFirstPage, indexOfLastPage);\n    return currentPosts;\n  };\n  console.log(currentPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Posts, {\n      posts: currentPosts(posts),\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      postsPerPage: postsPerPage,\n      totalPosts: posts.length,\n      setCurrentPage: setCurrentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"euZus2KU/qn/GdyeokNQxwPrexk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","useEffect","axios","Posts","Pagination","App","posts","setPosts","fetchData","response","get","params","page","currentPage","size","postsPerPage","data","console","log","setCurrentPage","setPostsPerPage","indexOfLastPage","indexOfFirstPage","currentPosts","slice","length"],"sources":["C:/Dev/04.front/04.react/my-page/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Posts from \"./components/Posts\";\nimport Pagination from \"./components/Pagination\";\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(\"http://localhost:8080/api/page\", {\n        params: {\n          page: currentPage,\n          size: postsPerPage,\n        },\n      });\n      // console.log(response.data);\n      setPosts(response.data);\n    };\n    fetchData();\n  }, []);\n  console.log(posts);\n  // 페이지 네이션을 위한 필요 데이터\n  /* \n  1. 페이지당 출력 개수(10) postPerPage\n  2. indexOfLastPage\n  3. indexOfFirstPage\n  4. currentPage\n*/\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(10);\n  const indexOfLastPage = currentPage * postsPerPage;\n  const indexOfFirstPage = indexOfLastPage - postsPerPage;\n  const currentPosts = (posts) => {\n    let currentPosts = [];\n    currentPosts = posts.slice(indexOfFirstPage, indexOfLastPage);\n    return currentPosts;\n  };\n  console.log(currentPage);\n  return (\n    <div className=\"App\">\n      <Posts posts={currentPosts(posts)}> </Posts>\n      <Pagination\n        postsPerPage={postsPerPage}\n        totalPosts={posts.length}\n        setCurrentPage={setCurrentPage}\n      ></Pagination>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,UAAU,MAAM,yBAAyB;AAAC;AAEjD,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMO,SAAS,GAAG,YAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,gCAAgC,EAAE;QACjEC,MAAM,EAAE;UACNC,IAAI,EAAEC,WAAW;UACjBC,IAAI,EAAEC;QACR;MACF,CAAC,CAAC;MACF;MACAR,QAAQ,CAACE,QAAQ,CAACO,IAAI,CAAC;IACzB,CAAC;IACDR,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EACNS,OAAO,CAACC,GAAG,CAACZ,KAAK,CAAC;EAClB;EACA;AACF;AACA;AACA;AACA;AACA;EACE,MAAM,CAACO,WAAW,EAAEM,cAAc,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACe,YAAY,EAAEK,eAAe,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMqB,eAAe,GAAGR,WAAW,GAAGE,YAAY;EAClD,MAAMO,gBAAgB,GAAGD,eAAe,GAAGN,YAAY;EACvD,MAAMQ,YAAY,GAAIjB,KAAK,IAAK;IAC9B,IAAIiB,YAAY,GAAG,EAAE;IACrBA,YAAY,GAAGjB,KAAK,CAACkB,KAAK,CAACF,gBAAgB,EAAED,eAAe,CAAC;IAC7D,OAAOE,YAAY;EACrB,CAAC;EACDN,OAAO,CAACC,GAAG,CAACL,WAAW,CAAC;EACxB,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB,QAAC,KAAK;MAAC,KAAK,EAAEU,YAAY,CAACjB,KAAK,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAU,eAC5C,QAAC,UAAU;MACT,YAAY,EAAES,YAAa;MAC3B,UAAU,EAAET,KAAK,CAACmB,MAAO;MACzB,cAAc,EAAEN;IAAe;MAAA;MAAA;MAAA;IAAA,QACnB;EAAA;IAAA;IAAA;IAAA;EAAA,QACV;AAEV;AAAC,GA5CQd,GAAG;AAAA,KAAHA,GAAG;AA8CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}