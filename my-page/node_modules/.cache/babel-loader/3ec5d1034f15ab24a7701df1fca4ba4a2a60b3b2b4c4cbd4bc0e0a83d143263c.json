{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\04.front\\\\04.react\\\\my-page\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Posts from \"./components/Posts\";\nimport Pagination from \"./components/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(\"http://localhost:8080/api/page\", {\n        params: {\n          page: 1,\n          size: 10\n        }\n      });\n      setCurrentPage(response.data.page);\n      setPosts(response.data.dtoList);\n      setIndexOfFirstPage(response.data.first);\n      setIndexOfLastPage(response.data.end);\n      setPageList(response.data.pageList);\n    };\n    fetchData();\n  }, []);\n  console.log(posts);\n  // 페이지 네이션을 위한 필요 데이터\n  /* \n  1. 페이지당 출력 개수(10) postPerPage\n  2. indexOfLastPage\n  3. indexOfFirstPage\n  4. currentPage\n  */\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPage, setTotalPage] = useState(\"\");\n  const [indexOfLastPage, setIndexOfLastPage] = useState(\"\");\n  const [indexOfFirstPage, setIndexOfFirstPage] = useState(\"\");\n  const currentPosts = posts => {\n    let currentPosts = [];\n    currentPosts = posts.slice(indexOfFirstPage, indexOfLastPage);\n    return currentPosts;\n  };\n  const [pageList, setPageList] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Posts, {\n      posts: currentPosts(posts),\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"62z5KXzxz2GYLGKYlraoiV8OUBM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","useEffect","axios","Posts","Pagination","App","posts","setPosts","fetchData","response","get","params","page","size","setCurrentPage","data","dtoList","setIndexOfFirstPage","first","setIndexOfLastPage","end","setPageList","pageList","console","log","currentPage","totalPage","setTotalPage","indexOfLastPage","indexOfFirstPage","currentPosts","slice"],"sources":["C:/Dev/04.front/04.react/my-page/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Posts from \"./components/Posts\";\nimport Pagination from \"./components/Pagination\";\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(\"http://localhost:8080/api/page\", {\n        params: {\n          page: 1,\n          size: 10,\n        },\n      });\n      setCurrentPage(response.data.page);\n      setPosts(response.data.dtoList);\n      setIndexOfFirstPage(response.data.first);\n      setIndexOfLastPage(response.data.end);\n      setPageList(response.data.pageList);\n    };\n    fetchData();\n  }, []);\n  console.log(posts);\n  // 페이지 네이션을 위한 필요 데이터\n  /* \n  1. 페이지당 출력 개수(10) postPerPage\n  2. indexOfLastPage\n  3. indexOfFirstPage\n  4. currentPage\n*/\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPage, setTotalPage] = useState(\"\");\n  const [indexOfLastPage, setIndexOfLastPage] = useState(\"\");\n  const [indexOfFirstPage, setIndexOfFirstPage] = useState(\"\");\n  const currentPosts = (posts) => {\n    let currentPosts = [];\n    currentPosts = posts.slice(indexOfFirstPage, indexOfLastPage);\n    return currentPosts;\n  };\n  const [pageList, setPageList] = useState([]);\n  return (\n    <div className=\"App\">\n      <Posts posts={currentPosts(posts)}> </Posts>\n      {/* <Pagination\n        pageNumbers={pageList}\n        totalPosts={posts.length}\n        setCurrentPage={setCurrentPage}\n      ></Pagination> */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,UAAU,MAAM,yBAAyB;AAAC;AAEjD,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMO,SAAS,GAAG,YAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,gCAAgC,EAAE;QACjEC,MAAM,EAAE;UACNC,IAAI,EAAE,CAAC;UACPC,IAAI,EAAE;QACR;MACF,CAAC,CAAC;MACFC,cAAc,CAACL,QAAQ,CAACM,IAAI,CAACH,IAAI,CAAC;MAClCL,QAAQ,CAACE,QAAQ,CAACM,IAAI,CAACC,OAAO,CAAC;MAC/BC,mBAAmB,CAACR,QAAQ,CAACM,IAAI,CAACG,KAAK,CAAC;MACxCC,kBAAkB,CAACV,QAAQ,CAACM,IAAI,CAACK,GAAG,CAAC;MACrCC,WAAW,CAACZ,QAAQ,CAACM,IAAI,CAACO,QAAQ,CAAC;IACrC,CAAC;IACDd,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EACNe,OAAO,CAACC,GAAG,CAAClB,KAAK,CAAC;EAClB;EACA;AACF;AACA;AACA;AACA;AACA;EACE,MAAM,CAACmB,WAAW,EAAEX,cAAc,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAAC0B,SAAS,EAAEC,YAAY,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC4B,eAAe,EAAET,kBAAkB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC6B,gBAAgB,EAAEZ,mBAAmB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM8B,YAAY,GAAIxB,KAAK,IAAK;IAC9B,IAAIwB,YAAY,GAAG,EAAE;IACrBA,YAAY,GAAGxB,KAAK,CAACyB,KAAK,CAACF,gBAAgB,EAAED,eAAe,CAAC;IAC7D,OAAOE,YAAY;EACrB,CAAC;EACD,MAAM,CAACR,QAAQ,EAAED,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC5C,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB,QAAC,KAAK;MAAC,KAAK,EAAE8B,YAAY,CAACxB,KAAK,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAU;IAAA;IAAA;IAAA;EAAA,QAMxC;AAEV;AAAC,GA/CQD,GAAG;AAAA,KAAHA,GAAG;AAiDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}