{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\04.front\\\\04.react\\\\my-page\\\\src\\\\App.js\",\n  _s2 = $RefreshSig$();\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Posts from \"./components/Posts\";\nimport Pagination from \"./components/Pagination\";\nimport { fetchData } from \"./Api/data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [size, setSize] = useState(10);\n  _s(useEffect(_s(() => {\n    _s();\n    // const fetchData = async () => {\n    //   const response = await axios.get(\"http://localhost:8080/api/page\", {\n    //     params: {\n    //       page: currentPage,\n    //       size: size,\n    //     },\n    //   });\n    //   setPosts(response.data.dtoList);\n    //   setTotalPage(response.data.totalPage);\n    //   setCurrentPage(response.data.page);\n    //   setSize(response.data.size);\n    //   setIndexOfFirstPage(response.data.start);\n    //   setIndexOfLastPage(response.data.end);\n    //   setPageList(response.data.pageList);\n    //   setPrev(response.data.prev);\n    //   setNext(response.data.next);\n    // };\n    const [post, setPost] = useState([\"\"]);\n    const data = fetchData(currentPage, size);\n    console.log(data);\n    data.then(data => setPost(data.dtoList));\n    console.log(post);\n  }, \"mkmQip6KPbEnu/V8n4yv3DRNN6M=\"), [currentPage]), \"mkmQip6KPbEnu/V8n4yv3DRNN6M=\");\n  // 페이지 네이션을 위한 필요 데이터\n  /* \n  1. 페이지당 출력 개수(10) postPerPage\n  2. indexOfLastPage\n  3. indexOfFirstPage\n  4. currentPage\n  */\n  // const [posts, setPosts] = useState([]);\n  // const [totalPage, setTotalPage] = useState(11);\n  // const [indexOfLastPage, setIndexOfLastPage] = useState(\"\");\n  // const [indexOfFirstPage, setIndexOfFirstPage] = useState(\"\");\n  // const [prev, setPrev] = useState(false);\n  // const [next, setNext] = useState(false);\n  // const currentPosts = (posts) => {\n\n  //   currentPosts = posts.slice(indexOfFirstPage, indexOfLastPage);\n  //   return currentPosts;\n  // };\n  const [pageList, setPageList] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"UyrEDQpQrpVrPMHfJlZsbJ9Ovf0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","useEffect","axios","Posts","Pagination","fetchData","App","currentPage","setCurrentPage","size","setSize","post","setPost","data","console","log","then","dtoList","pageList","setPageList"],"sources":["C:/Dev/04.front/04.react/my-page/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Posts from \"./components/Posts\";\nimport Pagination from \"./components/Pagination\";\nimport { fetchData } from \"./Api/data\";\n\nfunction App() {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [size, setSize] = useState(10);\n  useEffect(() => {\n    // const fetchData = async () => {\n    //   const response = await axios.get(\"http://localhost:8080/api/page\", {\n    //     params: {\n    //       page: currentPage,\n    //       size: size,\n    //     },\n    //   });\n    //   setPosts(response.data.dtoList);\n    //   setTotalPage(response.data.totalPage);\n    //   setCurrentPage(response.data.page);\n    //   setSize(response.data.size);\n    //   setIndexOfFirstPage(response.data.start);\n    //   setIndexOfLastPage(response.data.end);\n    //   setPageList(response.data.pageList);\n    //   setPrev(response.data.prev);\n    //   setNext(response.data.next);\n    // };\n    const [post, setPost] = useState([\"\"]);\n    const data = fetchData(currentPage, size);\n    console.log(data);\n    data.then((data) => setPost(data.dtoList));\n    console.log(post);\n  }, [currentPage]);\n  // 페이지 네이션을 위한 필요 데이터\n  /* \n  1. 페이지당 출력 개수(10) postPerPage\n  2. indexOfLastPage\n  3. indexOfFirstPage\n  4. currentPage\n*/\n  // const [posts, setPosts] = useState([]);\n  // const [totalPage, setTotalPage] = useState(11);\n  // const [indexOfLastPage, setIndexOfLastPage] = useState(\"\");\n  // const [indexOfFirstPage, setIndexOfFirstPage] = useState(\"\");\n  // const [prev, setPrev] = useState(false);\n  // const [next, setNext] = useState(false);\n  // const currentPosts = (posts) => {\n\n  //   currentPosts = posts.slice(indexOfFirstPage, indexOfLastPage);\n  //   return currentPosts;\n  // };\n  const [pageList, setPageList] = useState([]);\n  return (\n    <div className=\"App\">\n      {/* <Posts posts={data.dtoList}> </Posts> */}\n      {/* <Pagination\n        prev={data.prev}\n        next={data.next}\n        pageNumbers={data.pageList}\n        setCurrentPage={setCurrentPage}\n        start={data.start}\n      ></Pagination> */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,SAASC,SAAS,QAAQ,YAAY;AAAC;AAEvC,SAASC,GAAG,GAAG;EAAA;EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,GAAAC,SAAS,IAAC,MAAM;IAAA;IACd;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IACtC,MAAMa,IAAI,GAAGR,SAAS,CAACE,WAAW,EAAEE,IAAI,CAAC;IACzCK,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjBA,IAAI,CAACG,IAAI,CAAEH,IAAI,IAAKD,OAAO,CAACC,IAAI,CAACI,OAAO,CAAC,CAAC;IAC1CH,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;EACnB,CAAC,mCAAE,CAACJ,WAAW,CAAC,CAAC;EACjB;EACA;AACF;AACA;AACA;AACA;AACA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC5C,oBACE;IAAK,SAAS,EAAC;EAAK;IAAA;IAAA;IAAA;EAAA,QASd;AAEV;AAAC,IA1DQM,GAAG;AAAA,KAAHA,GAAG;AA4DZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}